{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setType","isReversed","setReverse","visibleGoods","goods","ALPHABET","sort","firstGood","secondGood","localeCompare","LENGTH","length","reverse","console","log","getReorderedGoods","isReseteButtonVisible","className","type","cn","onClick","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA6CE,IAAME,EAAgB,WAC3B,MAA4BC,mBAASH,EAASI,MAA9C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAiCH,oBAAS,GAA1C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EArCD,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,SAAUE,EACZ,EADYA,WAENE,EAAY,YAAOC,GAEzB,OAAQL,GACN,KAAKL,EAASW,SACZF,EAAaG,MAAK,SAACC,EAAWC,GAAZ,OAChBD,EAAUE,cAAcD,MAE1B,MAEF,KAAKd,EAASgB,OACZP,EAAaG,MAAK,SAACC,EAAWC,GAAZ,OAChBD,EAAUI,OAASH,EAAWG,UAIlC,KAAKjB,EAASI,MAYhB,OAPIG,GACFE,EAAaS,UAIfC,QAAQC,IAAIf,EAAUE,GAEfE,EAMcY,CACnBpB,EACA,CAAEI,WAAUE,eAERe,EAAwBf,GAAcF,IAAaL,EAASI,KAmBlE,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYpB,IAAaL,EAASW,WAEtCe,QA1BsB,WAC5BpB,EAAQN,EAASW,WAmBb,iCAWA,wBACEa,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYpB,IAAaL,EAASgB,SAEtCU,QAjCoB,WAC1BpB,EAAQN,EAASgB,SA0Bb,4BAWA,wBACEQ,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAalB,IAEjBmB,QAxCe,WACrBlB,GAAW,SAAAmB,GAAO,OAAKA,MAiCnB,qBAWCL,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QA7CgB,WACxBpB,EAAQN,EAASI,MACjBI,GAAW,IAwCL,sBAUJ,6BACGC,EAAamB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCvIlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a0a42546.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((firstGood, secondGood) => (\n        firstGood.localeCompare(secondGood)\n      ));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((firstGood, secondGood) => (\n        firstGood.length - secondGood.length\n      ));\n      break;\n\n    case SortType.NONE:\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setType] = useState(SortType.NONE);\n  const [isReversed, setReverse] = useState(false);\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n  const isReseteButtonVisible = isReversed || sortType !== SortType.NONE;\n\n  const sortByAlphabetClicker = () => {\n    setType(SortType.ALPHABET);\n  };\n\n  const sortByLengthClicker = () => {\n    setType(SortType.LENGTH);\n  };\n\n  const reverseClicker = () => {\n    setReverse(current => !current);\n  };\n\n  const resetStateClicker = () => {\n    setType(SortType.NONE);\n    setReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={sortByAlphabetClicker}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={sortByLengthClicker}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={reverseClicker}\n        >\n          Reverse\n        </button>\n\n        {isReseteButtonVisible && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetStateClicker}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}